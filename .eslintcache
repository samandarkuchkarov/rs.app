[{"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\routes.js":"4","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\components\\NavbarNoAuth.js":"5","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\components\\Navbar.js":"6","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\FirstPage.js":"7","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\MainPage.js":"8","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\student\\LoginPage.js":"9","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\student\\RegisterPage.js":"10","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\mentor\\LoginPage.js":"11","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\mentor\\RegisterPage.js":"12","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\App.js":"13","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\student.js":"14","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\components\\Posts\\Posts.js":"15","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\components\\Posts\\studentSide.js":"16","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\reducers\\index.js":"17","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\reducers\\posts.js":"18","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\actions\\posts.js":"19","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\api\\index.js":"20","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\profile\\student.js":"21","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\MainMentor.js":"22","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\studentList\\studentList.js":"23","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\taskCreator\\task.js":"24","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\submit\\submit.js":"25","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\checklist\\checklist.js":"26","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\score\\score.js":"27","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\reducers\\index.js":"28","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\reducers\\posts.js":"29","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\edit\\edit.js":"30"},{"size":821,"mtime":1613893588608,"results":"31","hashOfConfig":"32"},{"size":1067,"mtime":1612523603430,"results":"33","hashOfConfig":"32"},{"size":375,"mtime":1612195967458,"results":"34","hashOfConfig":"32"},{"size":4008,"mtime":1612782705386,"results":"35","hashOfConfig":"32"},{"size":1366,"mtime":1612195967451,"results":"36","hashOfConfig":"32"},{"size":1740,"mtime":1612530289702,"results":"37","hashOfConfig":"32"},{"size":1902,"mtime":1613908375805,"results":"38","hashOfConfig":"32"},{"size":8572,"mtime":1613910535174,"results":"39","hashOfConfig":"32"},{"size":2792,"mtime":1613907057512,"results":"40","hashOfConfig":"32"},{"size":5311,"mtime":1613907049864,"results":"41","hashOfConfig":"32"},{"size":2731,"mtime":1613907051943,"results":"42","hashOfConfig":"32"},{"size":4889,"mtime":1613907055908,"results":"43","hashOfConfig":"32"},{"size":701,"mtime":1612465213236,"results":"44","hashOfConfig":"32"},{"size":741,"mtime":1612465253434,"results":"45","hashOfConfig":"32"},{"size":3651,"mtime":1612532616317,"results":"46","hashOfConfig":"32"},{"size":1682,"mtime":1612532885760,"results":"47","hashOfConfig":"32"},{"size":118,"mtime":1612199997271,"results":"48","hashOfConfig":"32"},{"size":476,"mtime":1612288620243,"results":"49","hashOfConfig":"32"},{"size":772,"mtime":1612463596713,"results":"50","hashOfConfig":"32"},{"size":327,"mtime":1612521939273,"results":"51","hashOfConfig":"32"},{"size":2859,"mtime":1612274513360,"results":"52","hashOfConfig":"32"},{"size":11317,"mtime":1613909792026,"results":"53","hashOfConfig":"32"},{"size":2581,"mtime":1612778827678,"results":"54","hashOfConfig":"32"},{"size":2755,"mtime":1612782014655,"results":"55","hashOfConfig":"32"},{"size":2978,"mtime":1612778788762,"results":"56","hashOfConfig":"32"},{"size":3990,"mtime":1612339169278,"results":"57","hashOfConfig":"32"},{"size":1443,"mtime":1612344946433,"results":"58","hashOfConfig":"32"},{"size":120,"mtime":1612200422289,"results":"59","hashOfConfig":"32"},{"size":412,"mtime":1612195967462,"results":"60","hashOfConfig":"32"},{"size":3553,"mtime":1612530227390,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"haca37",{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\index.js",[],["130","131"],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\App.js",["132","133","134"],"import React, {useState} from 'react'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport { useRoutes } from './routes'\r\nimport { NavbarNoAuth } from './components/NavbarNoAuth'\r\nimport { Navbar } from './components/Navbar'\r\nimport 'materialize-css'\r\n\r\n\r\n\r\nfunction App() {\r\n  let condition1;\r\n  let condition2;\r\n\r\n  \r\n  if(localStorage.getItem('email')==null){\r\n    condition1 = false;\r\n  }else{\r\n    condition1 = true;\r\n    if(localStorage.getItem('mentor') == 'false'){\r\n      condition2 =false\r\n    }else{\r\n      condition2 = true\r\n    }\r\n  }\r\n  const [repeat,rerepeat] = useState('norepeat')\r\n  const [forlogin,setforlogin] = useState('norepeat')\r\n  const routes = useRoutes(condition1, condition2,setforlogin)\r\n  let nav;\r\n  if(localStorage.getItem('email')=== null){\r\n\r\n    nav =<NavbarNoAuth reapeat={rerepeat} /> \r\n  }else{\r\n    nav =<Navbar setforlogin = {setforlogin} /> \r\n  }\r\n  return (\r\n      <Router>\r\n       {nav}\r\n        <div className=\"wrap\">\r\n          {routes}\r\n        </div>\r\n      </Router>\r\n    \r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\routes.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\components\\NavbarNoAuth.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\components\\Navbar.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\FirstPage.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\MainPage.js",["135"],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\student\\LoginPage.js",["136"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {getPosts} from '../../actions/posts'\r\n\r\nexport const LoginPage = (rerepeat) => {\r\n    const [form, setForm2] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n\r\n    const changeHandler = event => {\r\n        setForm2({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n    const dispatch = useDispatch()\r\n\tuseEffect(()=>{\r\n\t\tdispatch(getPosts())\r\n\t},[dispatch])\r\n\r\n\tconst posts = useSelector((state)=>state.posts)\r\n    const loginHandler =  () => {\r\n        console.log(posts)\r\n        posts.forEach(users=>{\r\n            console.log(users.password)\r\n            if(users.email === form.email && form.password===users.password){\r\n                localStorage.setItem(\"email\", form.email);\r\n                localStorage.setItem(\"mentor\", 'false');\r\n                rerepeat.reapeat('reapet')\r\n                \r\n            }else{\r\n              console.log(users.email === form.email)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col s6 offset-s3\">\r\n                    <h1>EduCenter</h1>\r\n                    <div className=\"card blue-grey darken-1\">\r\n                        <div className=\"card-content white-text\">\r\n                            <span className=\"card-title\">Login for students</span>\r\n                            <div>\r\n                                <div className=\"input-field\">\r\n                                    <i className=\"material-icons prefix\">email</i>\r\n                                    <input id=\"email\" type=\"email\" className=\"validate\" autoComplete=\"off\" name=\"email\" onChange={ changeHandler } />\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                <i className=\"material-icons prefix\">lock_open</i>\r\n                                    <input id=\"password\" type=\"password\" name=\"password\" onChange={ changeHandler } />\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action right-align\">\r\n                            <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\"  onClick={ loginHandler }  >Login\r\n                                <i className=\"material-icons right\">login</i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\student\\RegisterPage.js",["137"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport {createPost} from '../../actions/posts'\r\nimport {useSelector} from 'react-redux'\r\nexport const RegisterPage = (rerepeat) => {\r\n    \r\n    console.log(rerepeat)\r\n    const dispatch = useDispatch()\r\n    const posts = useSelector((state)=>state.posts)\r\n    console.log(posts)\r\n    const [form2, setForm2] = useState({\r\n        username: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        location: '',\r\n        email: '',\r\n        mentor: false,\r\n        telegram:'Not given',\r\n        phoneNumber:'Not given',\r\n        about:`About info isn't written`,\r\n        english:'Not given',\r\n        education:'Empty',\r\n        mark:[],\r\n        tasks:[],\r\n        mentorName:'Empty',\r\n        submitedTasks:[] ,\r\n        password:''  ,\r\n        date:[],\r\n        time:[],\r\n        place:[],\r\n        topic:[],\r\n        teacher:[] \r\n    })\r\n\r\n    const changeHandler = event => {\r\n        event.preventDefault()\r\n        setForm2({ ...form2, [event.target.name]: event.target.value })\r\n        \r\n    }\r\n\r\n    const registerHandler = async () => {\r\n            let busyName = false\r\n            if(posts===[]){\r\n                form2.tasks=posts[0].tasks\r\n            }else{\r\n                form2.tasks = []\r\n                posts.forEach(element => {\r\n                    if(element.email === form2.email || element.username === form2.username){\r\n                        alert('this username or email is busy')\r\n                        busyName = true\r\n                        return\r\n                        \r\n                    }\r\n                });\r\n            }\r\n            if(busyName===false){\r\n                dispatch(createPost(form2))\r\n                localStorage.setItem(\"email\", form2.email);\r\n                localStorage.setItem(\"mentor\", false);\r\n                rerepeat.reapeat('reapet')\r\n            }\r\n          \r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col s6 offset-s3\">\r\n                    <h1>EduCenter</h1>\r\n                    <div className=\"card blue-grey darken-1\">\r\n                        <div className=\"card-content white-text\">\r\n                            <span className=\"card-title\">Registration for students</span>\r\n                            <div>\r\n                                <div className=\"input-field\">\r\n                                    <i className=\"material-icons prefix\">account_circle</i>\r\n                                    <input id=\"username\" type=\"text\" autoComplete=\"off\" name=\"username\" onChange={ changeHandler } />\r\n                                    <label htmlFor=\"username\">Username</label>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s6\">\r\n                                        <input id=\"first_name\" type=\"text\" autoComplete=\"off\" name=\"firstName\" onChange={ changeHandler } />\r\n                                        <label htmlFor=\"first_name\">First Name</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s6\">\r\n                                        <input id=\"last_name\" type=\"text\" autoComplete=\"off\" name=\"lastName\" onChange={ changeHandler } />\r\n                                        <label htmlFor=\"last_name\">Last Name</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                <i className=\"material-icons prefix\">place</i>\r\n                                    <input id=\"location\" type=\"text\" name=\"location\" autoComplete=\"off\" onChange={ changeHandler } />\r\n                                    <label htmlFor=\"location\">Location</label>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                    <i className=\"material-icons prefix\">email</i>\r\n                                    <input id=\"email\" type=\"email\" className=\"validate\" autoComplete=\"off\" name=\"email\" onChange={ changeHandler } />\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                <i className=\"material-icons prefix\">lock_open</i>\r\n                                    <input placeholder=\"\" id=\"password\" type=\"password\" name=\"password\" onChange={ changeHandler } />\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action right-align\">\r\n                            <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\"  onClick={ registerHandler }  >Create account\r\n                                <i className=\"material-icons right\">send</i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\mentor\\LoginPage.js",["138"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {getPosts} from '../../actions/posts'\r\nexport const LoginPageMentors = (rerepeat) => {\r\n  \r\n    const [form, setForm2] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n\r\n    const changeHandler = event => {\r\n        setForm2({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n    const dispatch = useDispatch()\r\n\tuseEffect(()=>{\r\n\t\tdispatch(getPosts())\r\n\t},[dispatch])\r\n\r\n\tconst posts = useSelector((state)=>state.posts)\r\n    const loginHandler =  () => {\r\n        console.log(posts)\r\n        posts.forEach(users=>{\r\n            console.log(users.password)\r\n            if(users.email === form.email && form.password==='admin123'){\r\n                localStorage.setItem(\"email\", form.email);\r\n                localStorage.setItem(\"mentor\", 'true');\r\n                rerepeat.reapeat('reapet')\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col s6 offset-s3\">\r\n                    <h1>EduCenter</h1>\r\n                    <div className=\"card blue-grey darken-1\">\r\n                        <div className=\"card-content white-text\">\r\n                            <span className=\"card-title\">Login for mentors</span>\r\n                            <div>\r\n                                <div className=\"input-field\">\r\n                                    <i className=\"material-icons prefix\">email</i>\r\n                                    <input id=\"email\" type=\"email\" className=\"validate\" autoComplete=\"off\" name=\"email\" onChange={ changeHandler } />\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                <i className=\"material-icons prefix\">lock_open</i>\r\n                                    <input id=\"password\" type=\"password\" name=\"password\" onChange={ changeHandler } />\r\n                                    <label htmlFor=\"password\">Password (admin123)</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action right-align\">\r\n                            <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\"  onClick={ loginHandler }  >Login\r\n                                <i className=\"material-icons right\">login</i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\mentor\\RegisterPage.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\App.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\student.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\components\\Posts\\Posts.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\components\\Posts\\studentSide.js",["139"],"import React,{useState,useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './styles.css';\r\nimport {useDispatch} from 'react-redux'\r\nimport {getPosts} from '../../../actions/posts'\r\nconst StudentSchedule=()=>{\r\n    let size = 25;\r\n    const dispatch = useDispatch()\r\n\tuseEffect(()=>{\r\n\t\tdispatch(getPosts())\r\n\t},[dispatch])\r\n\r\n  const posts = useSelector((state)=>state.posts)\r\n    console.log(posts)\r\n\r\n    let unique = 574845;\r\n   \r\n    let table = []\r\n    if(posts.length=== 0){\r\n        for(let i=0;i<size;i++){\r\n            table.push(\r\n           <tr key={unique++} >\r\n             <td className='rrow1' key={unique++}></td>\r\n             <td className='rrow2' key={unique++}></td>\r\n             <td className='rrow3' key={unique++}></td>\r\n             <td className='rrow4' key={unique++}></td>\r\n             <td className='rrow5' key={unique++}></td>\r\n           </tr>)}\r\n    }else{\r\n            for(let i = 0;i<size;i++){\r\n                table[i]=[posts[0].date[i],posts[0].time[i],posts[0].place[i],posts[0].topic[i],posts[0].teacher[i]]\r\n            }\r\n            table =  table.map((item)=>{\r\n                return <tr key={unique++}>\r\n               <td  className='rrow1' >{item[0]}</td>\r\n               <td  className='rrow2' >{item[1]}</td>\r\n               <td  className='rrow3' >{item[2]}</td>\r\n               <td  className='rrow4' >{item[3]}</td>\r\n               <td  className='rrow5' >{item[4]}</td>\r\n              </tr>\r\n               })\r\n              \r\n    }\r\n\r\n    return (\r\n        <table className='students'>\r\n          <tbody>\r\n        {table}\r\n        </tbody>\r\n\r\n        </table>\r\n    )\r\n}\r\nexport default StudentSchedule","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\reducers\\posts.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\actions\\posts.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\api\\index.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\profile\\student.js",["140"],"import {Grid} from '@material-ui/core'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './student.css'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n\r\nexport const Profile = () => {\r\n    const posts = useSelector((state)=>state.posts)\r\n  let user = posts.filter((user)=>{ \r\n       return user.email === localStorage.getItem('email') \r\n    })\r\n    console.log(user[0])\r\n    return(\r\n        <Grid  container  direction=\"row\" justify=\"center\" className='profile' alignItems=\"center\" spacing={3}> \r\n            <Grid item  xs = {3}><div className = 'profile-block'>\r\n                <Paper>\r\n                    <div className='profile-photo' style={{backgroundImage:'url(/gh-profile-img.png)'}}></div>\r\n                    <div className = 'profile-name'><i>{user[0].firstName}</i> <i>{user[0].lastName}</i></div>\r\n                    <div className = 'profile-email'>\r\n                        {user[0].email}\r\n                    </div>\r\n                    <div className = 'profile-location'>  {user[0].location}</div>\r\n                </Paper> \r\n                <Paper className='margin-top'>\r\n                    <div className='contacts'>Contacts</div>\r\n                    <div className='profile-email2'>Email: {user[0].email}</div>\r\n                    <div className='telegram'>Telegram: {user[0].telegram}</div>\r\n                    <div className='Phone'>Phone: {user[0].phoneNumber}</div>\r\n                </Paper></div></Grid>\r\n            <Grid item  xs = {3}><div className = 'profile-block'>\r\n                <Paper>\r\n                <div className='about-header'>About:</div>\r\n                <div className='about'>{user[0].about}</div>\r\n                </Paper> \r\n                </div></Grid>\r\n            <Grid item  xs = {3}>\r\n                <div className = 'profile-block'>\r\n                <Paper>\r\n                <div className = 'english-header'>Estimated English level</div>\r\n                <div className = 'english'>{user[0].english}</div>\r\n                </Paper> \r\n                <Paper className='margin-top'>\r\n                <div className = 'subscription-header'> Subscriptions</div>\r\n                <div className = 'subscription'>\r\n                    <div><a href='https://rs.school/'>1. Website of RSschool</a></div>\r\n                    <div><a href='https://discord.com/invite/QvEYg7EaQ4'>2. Discord of course</a></div>\r\n                </div>\r\n                </Paper>\r\n                </div>\r\n                </Grid>\r\n            <Grid item  xs = {3}><div className = 'profile-block'>\r\n                <Paper >\r\n                    <div className = 'education-header'>Education</div>\r\n                    <div className = 'education'>{user[0].education}</div>\r\n                </Paper> \r\n                <Paper >\r\n                </Paper>\r\n                </div></Grid>\r\n        </Grid>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\MainMentor.js",["141"],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\studentList\\studentList.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\taskCreator\\task.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\submit\\submit.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\checklist\\checklist.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\score\\score.js",["142"],"import { useDispatch} from 'react-redux'\r\nimport {useSelector} from 'react-redux'\r\nimport './score.css'\r\n\r\n export const Score = () =>{\r\n    const Data = useSelector((state)=>state.posts)\r\n    let students = Data.filter((user)=>{\r\n        return user.mentor === false\r\n    })\r\n    return(\r\n        <table>\r\n            <tbody>\r\n                <tr className = 'SL-container' >\r\n                <th className = 'SL-item score-item'>Username</th>\r\n                <th className = 'SL-item score-item'>Total score</th>\r\n                <th className = 'SL-item score-item'>Location</th>\r\n                <th className = 'SL-item score-item'>Mentor name</th>\r\n                <th className = 'SL-item score-item'>Telegram</th>\r\n                </tr>\r\n                {students.map((student)=>{\r\n                    return(\r\n                        <tr>\r\n                            <th className = 'SL-item score-item'>{student.username}</th>\r\n                            <th className = 'SL-item score-item'>{student.mark.reduce((a,b)=>a+b,0)}</th>\r\n                            <th className = 'SL-item score-item'>{student.location}</th>\r\n                            <th className = 'SL-item score-item'>{student.mentorName}</th>\r\n                            <th className = 'SL-item score-item'>{student.telegram}</th> \r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\schedule\\reducers\\posts.js",[],"C:\\Users\\user\\Desktop\\Новая папка\\rs-app-clone\\client\\src\\pages\\edit\\edit.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":19,"column":39,"nodeType":"149","messageId":"150","endLine":19,"endColumn":41},{"ruleId":"151","severity":1,"message":"152","line":25,"column":10,"nodeType":"153","messageId":"154","endLine":25,"endColumn":16},{"ruleId":"151","severity":1,"message":"155","line":26,"column":10,"nodeType":"153","messageId":"154","endLine":26,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":55,"column":10,"nodeType":"158","endLine":55,"endColumn":78},{"ruleId":"151","severity":1,"message":"159","line":1,"column":38,"nodeType":"153","messageId":"154","endLine":1,"endColumn":48},{"ruleId":"151","severity":1,"message":"160","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"159","line":1,"column":38,"nodeType":"153","messageId":"154","endLine":1,"endColumn":48},{"ruleId":"151","severity":1,"message":"161","line":1,"column":15,"nodeType":"153","messageId":"154","endLine":1,"endColumn":23},{"ruleId":"151","severity":1,"message":"162","line":4,"column":9,"nodeType":"153","messageId":"154","endLine":4,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":56,"column":10,"nodeType":"158","endLine":56,"endColumn":78},{"ruleId":"151","severity":1,"message":"162","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":21},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'repeat' is assigned a value but never used.","Identifier","unusedVar","'forlogin' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]